/**
 * [A로 B 만들기]
 * 
 * 문자열 before와 after가 매개변수로 주어질 때, 
 * before의 순서를 바꾸어 after를 만들 수 있으면 1을, 
 * 만들 수 없으면 0을 return 하도록 solution 함수를 완성해보세요.
 */

const solution = (before, after) => [...before].reduce((acc, cur) => acc.replace(cur, ""), after).length === 0 ? 1 : 0;

console.time();
console.log(solution("olleh", "hello"));	// 1
console.log(solution("allpe", "apple"));	// 0
console.timeEnd();

// 테스트 1 〉	통과 (0.08ms, 33.4MB)
// 테스트 2 〉	통과 (0.07ms, 33.5MB)
// 테스트 3 〉	통과 (0.05ms, 33.6MB)
// 테스트 4 〉	통과 (0.07ms, 33.4MB)
// 테스트 5 〉	통과 (0.94ms, 33.8MB)
// 테스트 6 〉	통과 (0.04ms, 33.4MB)
// 테스트 7 〉	통과 (0.05ms, 33.5MB)
// 테스트 8 〉	통과 (0.28ms, 33.6MB)
// 테스트 9 〉	통과 (0.08ms, 33.5MB)
// 테스트 10 〉	통과 (0.16ms, 33.5MB)
// 테스트 11 〉	통과 (1.44ms, 33.7MB)
// 테스트 12 〉	통과 (1.73ms, 33.8MB)
// 테스트 13 〉	통과 (0.07ms, 33.4MB)
// 테스트 14 〉	통과 (0.06ms, 33.6MB)
// 테스트 15 〉	통과 (0.21ms, 33.3MB)
// 테스트 16 〉	통과 (0.54ms, 33.7MB)
// 테스트 17 〉	통과 (0.52ms, 33.4MB)
// 테스트 18 〉	통과 (1.47ms, 33.7MB)
// 테스트 19 〉	통과 (1.75ms, 33.6MB)
// 테스트 20 〉	통과 (0.97ms, 33.7MB)
// 테스트 21 〉	통과 (1.13ms, 33.7MB)
// 테스트 22 〉	통과 (0.04ms, 33.6MB)
// 테스트 23 〉	통과 (0.06ms, 33.6MB)

const solution2 = (before, after) => [...before].sort().join("") === [...after].sort().join("") ? 1 : 0;

console.time();
console.log(solution2("olleh", "hello"));	// 1
console.log(solution2("allpe", "apple"));	// 0
console.timeEnd();

// 테스트 1 〉	통과 (0.06ms, 33.4MB)
// 테스트 2 〉	통과 (0.03ms, 33.4MB)
// 테스트 3 〉	통과 (0.06ms, 33.5MB)
// 테스트 4 〉	통과 (0.04ms, 33.4MB)
// 테스트 5 〉	통과 (0.47ms, 33.6MB)
// 테스트 6 〉	통과 (0.04ms, 33.4MB)
// 테스트 7 〉	통과 (0.03ms, 33.4MB)
// 테스트 8 〉	통과 (0.25ms, 33.4MB)
// 테스트 9 〉	통과 (0.03ms, 33.4MB)
// 테스트 10 〉	통과 (0.18ms, 33.5MB)
// 테스트 11 〉	통과 (0.67ms, 33.6MB)
// 테스트 12 〉	통과 (0.71ms, 33.6MB)
// 테스트 13 〉	통과 (0.05ms, 33.4MB)
// 테스트 14 〉	통과 (0.06ms, 33.5MB)
// 테스트 15 〉	통과 (0.19ms, 33.6MB)
// 테스트 16 〉	통과 (0.33ms, 33.4MB)
// 테스트 17 〉	통과 (0.32ms, 33.5MB)
// 테스트 18 〉	통과 (0.67ms, 33.6MB)
// 테스트 19 〉	통과 (0.74ms, 33.5MB)
// 테스트 20 〉	통과 (0.72ms, 33.4MB)
// 테스트 21 〉	통과 (0.70ms, 33.5MB)
// 테스트 22 〉	통과 (0.06ms, 33.5MB)
// 테스트 23 〉	통과 (0.03ms, 33.4MB)